<% layout('../layout', { title: 'Управление заявками - VolunteerHub' }) %>

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
  <!-- Header -->
  <div class="mb-8">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-bold text-slate-900 mb-2">Управление заявками</h1>
        <p class="text-slate-600">Просмотр и модерация заявок волонтёров</p>
      </div>
      <a href="/org/<%= it.orgId %>" class="border border-slate-300 hover:bg-slate-50 text-slate-700 px-4 py-2 rounded-md font-medium transition-colors inline-flex items-center">
        <i data-lucide="arrow-left" class="w-4 h-4 mr-2"></i>
        К дашборду
      </a>
    </div>
  </div>

  <!-- Filters -->
  <div class="bg-white rounded-xl shadow-sm border border-slate-200 p-6 mb-8">
    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
      <!-- Status Filter -->
      <div>
        <label class="block text-sm font-medium text-slate-700 mb-2">Статус</label>
        <select 
          id="status-filter" 
          class="w-full p-2 border border-slate-300 rounded-md"
          onchange="applyFilters()"
        >
          <option value="">Все статусы</option>
          <option value="new" <%= it.currentStatus === 'new' ? 'selected' : '' %>>Новые</option>
          <option value="pending" <%= it.currentStatus === 'pending' ? 'selected' : '' %>>На рассмотрении</option>
          <option value="approved" <%= it.currentStatus === 'approved' ? 'selected' : '' %>>Одобренные</option>
          <option value="waitlisted" <%= it.currentStatus === 'waitlisted' ? 'selected' : '' %>>В очереди</option>
          <option value="declined" <%= it.currentStatus === 'declined' ? 'selected' : '' %>>Отклонённые</option>
          <option value="cancelled" <%= it.currentStatus === 'cancelled' ? 'selected' : '' %>>Отменённые</option>
        </select>
      </div>

      <!-- Event Filter -->
      <div>
        <label class="block text-sm font-medium text-slate-700 mb-2">Событие</label>
        <select 
          id="event-filter" 
          class="w-full p-2 border border-slate-300 rounded-md"
          onchange="applyFilters()"
        >
          <option value="">Все события</option>
          <% it.events.forEach(event => { %>
            <option value="<%= event.id %>" <%= it.currentEventId == event.id ? 'selected' : '' %>>
              <%= event.title %>
            </option>
          <% }) %>
        </select>
      </div>

      <!-- Search -->
      <div>
        <label class="block text-sm font-medium text-slate-700 mb-2">Поиск по имени</label>
        <input 
          type="text" 
          id="search-input"
          placeholder="Имя волонтёра..." 
          class="w-full p-2 border border-slate-300 rounded-md"
          onkeyup="searchApplications()"
        >
      </div>
    </div>
  </div>

  <!-- View Toggle -->
  <div class="flex justify-between items-center mb-6">
    <div class="flex space-x-2" x-data="{ view: 'table' }">
      <button 
        @click="view = 'table'; toggleView('table')"
        :class="view === 'table' ? 'bg-emerald-600 text-white' : 'bg-white text-slate-700 border border-slate-300'"
        class="px-4 py-2 rounded-md font-medium transition-colors"
      >
        <i data-lucide="table" class="w-4 h-4 mr-2 inline"></i>
        Таблица
      </button>
      <button 
        @click="view = 'kanban'; toggleView('kanban')"
        :class="view === 'kanban' ? 'bg-emerald-600 text-white' : 'bg-white text-slate-700 border border-slate-300'"
        class="px-4 py-2 rounded-md font-medium transition-colors"
      >
        <i data-lucide="columns" class="w-4 h-4 mr-2 inline"></i>
        Kanban
      </button>
    </div>
  </div>

  <!-- Kanban View -->
  <div id="kanban-view" class="hidden">
    <div class="grid grid-cols-1 lg:grid-cols-4 gap-6 mb-8">
      <!-- New Applications -->
      <div class="bg-white rounded-xl shadow-sm border border-slate-200">
        <div class="px-4 py-3 border-b border-slate-200 bg-slate-50">
          <h3 class="font-semibold text-slate-900 flex items-center">
            <div class="w-3 h-3 bg-slate-500 rounded-full mr-2"></div>
            Новые
            <span class="ml-auto bg-slate-200 text-slate-700 px-2 py-1 rounded-full text-xs" id="new-count">0</span>
          </h3>
        </div>
        <div class="p-4 space-y-3 min-h-96" id="new-column">
          <!-- Applications will be populated here -->
        </div>
      </div>

      <!-- Pending -->
      <div class="bg-white rounded-xl shadow-sm border border-slate-200">
        <div class="px-4 py-3 border-b border-slate-200 bg-yellow-50">
          <h3 class="font-semibold text-slate-900 flex items-center">
            <div class="w-3 h-3 bg-yellow-500 rounded-full mr-2"></div>
            На рассмотрении
            <span class="ml-auto bg-yellow-200 text-yellow-800 px-2 py-1 rounded-full text-xs" id="pending-count">0</span>
          </h3>
        </div>
        <div class="p-4 space-y-3 min-h-96" id="pending-column">
          <!-- Applications will be populated here -->
        </div>
      </div>

      <!-- Approved/Waitlisted -->
      <div class="bg-white rounded-xl shadow-sm border border-slate-200">
        <div class="px-4 py-3 border-b border-slate-200 bg-green-50">
          <h3 class="font-semibold text-slate-900 flex items-center">
            <div class="w-3 h-3 bg-green-500 rounded-full mr-2"></div>
            Одобрено
            <span class="ml-auto bg-green-200 text-green-800 px-2 py-1 rounded-full text-xs" id="approved-count">0</span>
          </h3>
        </div>
        <div class="p-4 space-y-3 min-h-96" id="approved-column">
          <!-- Applications will be populated here -->
        </div>
      </div>

      <!-- Declined/Cancelled -->
      <div class="bg-white rounded-xl shadow-sm border border-slate-200">
        <div class="px-4 py-3 border-b border-slate-200 bg-red-50">
          <h3 class="font-semibold text-slate-900 flex items-center">
            <div class="w-3 h-3 bg-red-500 rounded-full mr-2"></div>
            Отклонено
            <span class="ml-auto bg-red-200 text-red-800 px-2 py-1 rounded-full text-xs" id="declined-count">0</span>
          </h3>
        </div>
        <div class="p-4 space-y-3 min-h-96" id="declined-column">
          <!-- Applications will be populated here -->
        </div>
      </div>
    </div>
  </div>

  <!-- Applications Table -->
  <div id="table-view" class="bg-white rounded-xl shadow-sm border border-slate-200 overflow-hidden">
    <div class="px-6 py-4 border-b border-slate-200">
      <h2 class="text-xl font-semibold text-slate-900">
        Заявки (<%= it.applications.length %>)
      </h2>
    </div>

    <% if (it.applications && it.applications.length > 0) { %>
      <div class="overflow-x-auto">
        <table class="w-full" id="applications-table">
          <thead class="bg-slate-50">
            <tr>
              <th class="py-3 px-4 w-4"></th>
              <th class="text-left py-3 px-4 font-semibold text-slate-700">Волонтёр</th>
              <th class="text-left py-3 px-4 font-semibold text-slate-700">Событие</th>
              <th class="text-left py-3 px-4 font-semibold text-slate-700">Роль</th>
              <th class="text-left py-3 px-4 font-semibold text-slate-700">Смена</th>
              <th class="text-left py-3 px-4 font-semibold text-slate-700">Ответы</th>
              <th class="text-left py-3 px-4 font-semibold text-slate-700">Дата подачи</th>
              <th class="text-left py-3 px-4 font-semibold text-slate-700">Статус</th>
              <th class="text-right py-3 px-4 font-semibold text-slate-700">Действия</th>
            </tr>
          </thead>
          <tbody class="divide-y divide-slate-200">
            <% it.applications.forEach(app => { %>
              <tr class="hover:bg-slate-50 transition-colors" data-volunteer="<%= app.volunteer_name.toLowerCase() %>">
                <td class="py-4 px-4">
                  <input type="checkbox" data-application-id="<%= app.id %>" onchange="updateBulkActions()" class="rounded border-slate-300">
                </td>
                <td class="py-4 px-4">
                  <div>
                    <p class="font-medium text-slate-900"><%= app.volunteer_name %></p>
                    <p class="text-sm text-slate-600"><%= app.email %></p>
                    <% if (app.phone) { %>
                      <p class="text-sm text-slate-500"><%= app.phone %></p>
                    <% } %>
                    <% if (app.telegram_username) { %>
                      <p class="text-sm text-slate-500"><a href="https://t.me/<%= app.telegram_username %>" target="_blank">@<%= app.telegram_username %></a></p>
                    <% } %>
                  </div>
                </td>
                <td class="py-4 px-4">
                  <p class="font-medium text-slate-900"><%= app.event_title %></p>
                </td>
                <td class="py-4 px-4">
                  <p class="text-slate-900"><%= app.role_title %></p>
                </td>
                <td class="py-4 px-4">
                  <p class="text-sm text-slate-600">
                    <%= new Date(app.start_time).toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'}) %> -
                    <%= new Date(app.end_time).toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'}) %>
                  </p>
                </td>
                <td class="py-4 px-4 text-sm">
                  <% if (app.answers) { const ans = JSON.parse(app.answers); %>
                    <ul>
                      <% Object.entries(ans).forEach(([q,a]) => { %>
                        <li><span class="font-medium"><%= q %>:</span> <%= a %></li>
                      <% }) %>
                    </ul>
                  <% } else { %>
                    <span class="text-slate-400">—</span>
                  <% } %>
                </td>
                <td class="py-4 px-4">
                  <p class="text-sm text-slate-600">
                    <%= new Date(app.applied_at).toLocaleDateString('ru-RU') %>
                  </p>
                </td>
                <td class="py-4 px-4">
                  <span class="px-2 py-1 rounded-full text-xs font-medium
                    <% if (app.status === 'approved') { %>bg-green-100 text-green-800
                    <% } else if (app.status === 'pending') { %>bg-yellow-100 text-yellow-800
                    <% } else if (app.status === 'waitlisted') { %>bg-blue-100 text-blue-800
                    <% } else if (app.status === 'declined') { %>bg-red-100 text-red-800
                    <% } else if (app.status === 'new') { %>bg-slate-100 text-slate-800
                    <% } else { %>bg-slate-100 text-slate-800<% } %>">
                    <% 
                      const statusNames = {
                        'new': 'Новая',
                        'pending': 'На рассмотрении',
                        'approved': 'Одобрена',
                        'waitlisted': 'В очереди',
                        'declined': 'Отклонена',
                        'cancelled': 'Отменена'
                      };
                    %>
                    <%= statusNames[app.status] || app.status %>
                  </span>
                </td>
                <td class="py-4 px-4 text-right">
                  <div class="flex justify-end space-x-2">
                    <% if (app.status === 'new' || app.status === 'pending') { %>
                      <button 
                        onclick="updateApplicationStatus('<%= app.id %>', 'approved')"
                        class="bg-green-600 hover:bg-green-700 text-white px-2 py-1 rounded text-xs font-medium transition-colors"
                        title="Одобрить"
                      >
                        <i data-lucide="check" class="w-3 h-3"></i>
                      </button>
                      <button 
                        onclick="updateApplicationStatus('<%= app.id %>', 'waitlisted')"
                        class="bg-blue-600 hover:bg-blue-700 text-white px-2 py-1 rounded text-xs font-medium transition-colors"
                        title="В очередь"
                      >
                        <i data-lucide="clock" class="w-3 h-3"></i>
                      </button>
                      <button 
                        onclick="updateApplicationStatus('<%= app.id %>', 'declined')"
                        class="bg-red-600 hover:bg-red-700 text-white px-2 py-1 rounded text-xs font-medium transition-colors"
                        title="Отклонить"
                      >
                        <i data-lucide="x" class="w-3 h-3"></i>
                      </button>
                    <% } %>
                    <button 
                      onclick="showApplicationDetails('<%= app.id %>')"
                      class="bg-slate-600 hover:bg-slate-700 text-white px-2 py-1 rounded text-xs font-medium transition-colors"
                      title="Подробнее"
                    >
                      <i data-lucide="eye" class="w-3 h-3"></i>
                    </button>
                  </div>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    <% } else { %>
      <div class="text-center py-12">
        <div class="w-24 h-24 bg-slate-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <i data-lucide="inbox" class="w-12 h-12 text-slate-400"></i>
        </div>
        <h3 class="text-xl font-semibold text-slate-900 mb-2">Заявок не найдено</h3>
        <p class="text-slate-600 mb-6">
          <% if (it.currentStatus || it.currentEventId) { %>
            Попробуйте изменить фильтры
          <% } else { %>
            Заявки от волонтёров будут появляться здесь
          <% } %>
        </p>
        <% if (it.currentStatus || it.currentEventId) { %>
          <button onclick="clearFilters()" class="text-emerald-600 hover:text-emerald-700 font-medium">
            Очистить фильтры
          </button>
        <% } %>
      </div>
    <% } %>
  </div>

  <!-- Bulk Actions -->
  <% if (it.applications && it.applications.length > 0) { %>
    <div class="mt-6 bg-white rounded-xl shadow-sm border border-slate-200 p-4">
      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-4">
          <label class="flex items-center">
            <input type="checkbox" id="select-all" class="rounded border-slate-300" onchange="toggleSelectAll()">
            <span class="ml-2 text-sm text-slate-700">Выбрать все</span>
          </label>
          <span id="selected-count" class="text-sm text-slate-500">0 выбрано</span>
        </div>
        <div class="flex space-x-2">
          <button
            id="bulk-approve"
            onclick="bulkUpdateStatus('approved')"
            class="bg-green-600 hover:bg-green-700 text-white px-3 py-2 rounded text-sm font-medium transition-colors disabled:opacity-50"
            disabled
          >
            Одобрить выбранные
          </button>
          <button
            id="bulk-waitlist"
            onclick="bulkUpdateStatus('waitlisted')"
            class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded text-sm font-medium transition-colors disabled:opacity-50"
            disabled
          >
            В лист ожидания
          </button>
          <button
            id="bulk-decline"
            onclick="bulkUpdateStatus('declined')"
            class="bg-red-600 hover:bg-red-700 text-white px-3 py-2 rounded text-sm font-medium transition-colors disabled:opacity-50"
            disabled
          >
            Отклонить выбранные
          </button>
        </div>
      </div>
    </div>
  <% } %>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    lucide.createIcons();
  });

  function applyFilters() {
    const status = document.getElementById('status-filter').value;
    const eventId = document.getElementById('event-filter').value;

    let url = `/org/<%= it.orgId %>/applications`;
    if (status) {
      url += `/${status}`;
    }
    const params = new URLSearchParams();
    if (eventId) params.set('event_id', eventId);
    const qs = params.toString();
    if (qs) url += `?${qs}`;
    window.location = url;
  }

  function clearFilters() {
    window.location = `/org/<%= it.orgId %>/applications`;
  }

  function searchApplications() {
    const searchTerm = document.getElementById('search-input').value.toLowerCase();
    const rows = document.querySelectorAll('#applications-table tbody tr');
    
    rows.forEach(row => {
      const volunteerName = row.dataset.volunteer;
      if (volunteerName.includes(searchTerm)) {
        row.style.display = '';
      } else {
        row.style.display = 'none';
      }
    });
  }

  async function updateApplicationStatus(applicationId, status) {
    try {
      const response = await fetch(`/org/<%= it.orgId %>/applications/${applicationId}/status`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ status })
      });

      if (response.ok) {
        const statusNames = {
          'approved': 'одобрена',
          'declined': 'отклонена',
          'waitlisted': 'добавлена в очередь'
        };
        showToast(`Заявка ${statusNames[status] || 'обновлена'}`, 'success');
        setTimeout(() => location.reload(), 1000);
      } else {
        showToast('Ошибка при обновлении заявки', 'error');
      }
    } catch (error) {
      console.error('Error:', error);
      showToast('Ошибка при обновлении заявки', 'error');
    }
  }

  function showApplicationDetails(applicationId) {
    // TODO: Implement application details modal
    showToast('Детали заявки - в разработке', 'info');
  }

  function toggleSelectAll() {
    const selectAll = document.getElementById('select-all');
    const checkboxes = document.querySelectorAll('tbody input[type="checkbox"]');
    
    checkboxes.forEach(cb => cb.checked = selectAll.checked);
    updateBulkActions();
  }

  function updateBulkActions() {
    const checked = document.querySelectorAll('tbody input[type="checkbox"]:checked').length;
    document.getElementById('selected-count').textContent = `${checked} выбрано`;
    
    const bulkButtons = document.querySelectorAll('#bulk-approve, #bulk-decline, #bulk-waitlist');
    bulkButtons.forEach(btn => btn.disabled = checked === 0);
  }

  async function bulkUpdateStatus(status) {
    const selectedIds = Array.from(document.querySelectorAll('tbody input[type="checkbox"]:checked'))
      .map(cb => cb.dataset.applicationId);

    if (selectedIds.length === 0) return;

    if (confirm(`Изменить статус для ${selectedIds.length} заявок?`)) {
      try {
        const response = await fetch(`/org/<%= it.orgId %>/applications/bulk-status`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ ids: selectedIds, status })
        });
        if (response.ok) {
          showToast('Статусы обновлены', 'success');
          setTimeout(() => location.reload(), 1000);
        } else {
          showToast('Ошибка при обновлении заявок', 'error');
        }
      } catch (error) {
        showToast('Ошибка при обновлении заявок', 'error');
      }
    }
  }

  function toggleView(view) {
    const tableView = document.getElementById('table-view');
    const kanbanView = document.getElementById('kanban-view');
    
    if (view === 'kanban') {
      tableView.classList.add('hidden');
      kanbanView.classList.remove('hidden');
      populateKanban();
    } else {
      tableView.classList.remove('hidden');
      kanbanView.classList.add('hidden');
    }
  }

  function populateKanban() {
    // Группируем заявки по статусам
    const applications = <%= JSON.stringify(it.applications || []) %>;
    
    const grouped = {
      'new': applications.filter(app => app.status === 'new'),
      'pending': applications.filter(app => app.status === 'pending'),
      'approved': applications.filter(app => ['approved', 'waitlisted'].includes(app.status)),
      'declined': applications.filter(app => ['declined', 'cancelled'].includes(app.status))
    };

    // Обновляем счётчики
    Object.keys(grouped).forEach(status => {
      const countElement = document.getElementById(`${status}-count`);
      if (countElement) {
        countElement.textContent = grouped[status].length;
      }
    });

    // Заполняем колонки
    Object.keys(grouped).forEach(status => {
      const column = document.getElementById(`${status}-column`);
      if (!column) return;
      
      if (grouped[status].length === 0) {
        column.innerHTML = `
          <div class="text-center py-8 text-slate-400">
            <i data-lucide="inbox" class="w-8 h-8 mx-auto mb-2"></i>
            <p class="text-sm">Нет заявок</p>
          </div>
        `;
      } else {
        column.innerHTML = grouped[status].map(app => `
          <div class="bg-slate-50 border border-slate-200 rounded-lg p-3 cursor-pointer hover:shadow-sm transition-shadow" 
               onclick="showApplicationDetails('${app.id}')">
            <h4 class="font-medium text-slate-900 mb-1">${app.volunteer_name}</h4>
            <p class="text-sm text-slate-600 mb-2">${app.event_title}</p>
            <p class="text-xs text-slate-500 mb-3">${app.role_title}</p>
            
            <div class="flex space-x-1">
              ${status === 'new' || status === 'pending' ? `
                <button onclick="event.stopPropagation(); updateApplicationStatus('${app.id}', 'approved')" 
                        class="flex-1 bg-green-600 hover:bg-green-700 text-white px-2 py-1 rounded text-xs transition-colors">
                  ✓
                </button>
                <button onclick="event.stopPropagation(); updateApplicationStatus('${app.id}', 'declined')" 
                        class="flex-1 bg-red-600 hover:bg-red-700 text-white px-2 py-1 rounded text-xs transition-colors">
                  ✗
                </button>
              ` : ''}
            </div>
          </div>
        `).join('');
      }
      
      lucide.createIcons();
    });
  }
</script>
